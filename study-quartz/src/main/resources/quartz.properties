#============================================================================
# 配置JobStore
#============================================================================
# JobDataMaps 是否都为String类型，默认false
org.quartz.spi.jobStore.useProperties=false
#数据库中表的前缀
org.quartz.spi.jobStore.tablePrefix=QRTZ_
#是否加入集群
org.quartz.spi.jobStore.isClustered=true
#调度实例失效的检查时间间隔ms
org.quartz.spi.jobStore.clusterCheckinInterval=5000
#当设置为"true”时， 此属性告源Quartz在非托管JDBC连接上调用setTransactionIsolation
org.quartz.spi.jobStore.txIsolationLevelReadCommitted=true
#持久化使用的类
org.quartz.spi.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
#数据库代理类，一般org. quartz. impl. jdbcjobstore. StdJDBCDelegate可以满足大部分数据库
org.quartz.spi.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate


#=========================================================================== =
# Scheduler 调度器属性配置
#============================================================================
#调度标识名集群中每一个实例都必 须使用相同的名称
org.quartz.scheduler.instanceName = ClusterQuartz
共ID设置为自动获取每一个必须不同
org.quartz.scheduler.instanceId= AUTO


#===========================================================================
#配置ThreadPool
#=====================================================================
#共线程池的实现类(一般使用SimpleThreadPool即可满足几乎所有用户的需求)
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
# threadCount和threadPriority将以setter的形式注入ThreadPool实例
# 并发个数
org.quartz.threadPool.threadCount = 5
# 优先级
org.quartz.threadPool.threadPriority = 5